From d3e2071691a328d4498a08bb40eb80dc15e10562 Mon Sep 17 00:00:00 2001
From: quh4gko8 <88831734+quh4gko8@users.noreply.github.com>
Date: Tue, 13 Jun 2023 12:19:41 +0000
Subject: [PATCH] UserManager settings for running in background

Port to LOS20

Change-Id: I70c3897b0bc4f5c86fea8ba5447eb0131f1077f8
---
 res/values/strings_ext.xml                    |  5 ++
 res/xml/user_details_settings.xml             |  4 ++
 .../settings/users/UserDetailsSettings.java   | 14 ++++++
 .../settings/users/UserRestrictions.java      | 49 +++++++++++++++++++
 4 files changed, 72 insertions(+)
 create mode 100644 res/values/strings_ext.xml
 create mode 100644 src/com/android/settings/users/UserRestrictions.java

diff --git a/res/values/strings_ext.xml b/res/values/strings_ext.xml
new file mode 100644
index 00000000000..d3d5724f332
--- /dev/null
+++ b/res/values/strings_ext.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <!-- Title of preference to enable running in background [CHAR LIMIT=40] -->
+    <string name="user_run_in_background">Allow running in background</string>
+</resources>
diff --git a/res/xml/user_details_settings.xml b/res/xml/user_details_settings.xml
index 068039cbd04..17a28b011cd 100644
--- a/res/xml/user_details_settings.xml
+++ b/res/xml/user_details_settings.xml
@@ -25,6 +25,10 @@
             android:key="user_grant_admin"
             android:icon="@drawable/ic_admin_panel_settings"
             android:title="@string/user_grant_admin" />
+    <SwitchPreference
+            android:icon="@drawable/ic_sync"
+            android:key="allow_run_in_background"
+            android:title="@string/user_run_in_background" />
     <SwitchPreference
             android:key="enable_calling"
             android:icon="@drawable/ic_phone"
diff --git a/src/com/android/settings/users/UserDetailsSettings.java b/src/com/android/settings/users/UserDetailsSettings.java
index 402d4b18dd4..0a279afa06b 100644
--- a/src/com/android/settings/users/UserDetailsSettings.java
+++ b/src/com/android/settings/users/UserDetailsSettings.java
@@ -65,6 +65,7 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
     private static final String KEY_GRANT_ADMIN = "user_grant_admin";
     private static final String KEY_APP_AND_CONTENT_ACCESS = "app_and_content_access";
     private static final String KEY_APP_COPYING = "app_copying";
+    private static final String KEY_RUN_IN_BACKGROUND = "allow_run_in_background";
 
     /** Integer extra containing the userId to manage */
     static final String EXTRA_USER_ID = "user_id";
@@ -98,10 +99,13 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
     Preference mRemoveUserPref;
     @VisibleForTesting
     SwitchPreference mGrantAdminPref;
+    private SwitchPreference mRunInBackgroundPref;
 
     @VisibleForTesting
     /** The user being studied (not the user doing the studying). */
     UserInfo mUserInfo;
+    private Bundle mDefaultGuestRestrictions;
+    private UserRestrictions userRestrictions;
 
     @Override
     public int getMetricsCategory() {
@@ -197,6 +201,9 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
                 showDialog(DIALOG_CONFIRM_GRANT_ADMIN);
             }
             return false;
+        } else if (preference == mRunInBackgroundPref) {
+            userRestrictions.set(UserManager.DISALLOW_RUN_IN_BACKGROUND, !((boolean) newValue));
+            return true;
         }
         return true;
     }
@@ -340,6 +347,7 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
         boolean isNewUser =
                 arguments.getBoolean(AppRestrictionsFragment.EXTRA_NEW_USER, false);
         mUserInfo = mUserManager.getUserInfo(userId);
+        userRestrictions = new UserRestrictions(mUserManager, mUserInfo);
 
         mSwitchUserPref = findPreference(KEY_SWITCH_USER);
         mPhonePref = findPreference(KEY_ENABLE_TELEPHONY);
@@ -349,6 +357,7 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
         mGrantAdminPref = findPreference(KEY_GRANT_ADMIN);
 
         mGrantAdminPref.setChecked(mUserInfo.isAdmin());
+        mRunInBackgroundPref = findPreference(KEY_RUN_IN_BACKGROUND);
 
         mSwitchUserPref.setTitle(
                 context.getString(com.android.settingslib.R.string.user_switch_to_user,
@@ -372,6 +381,7 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
             removePreference(KEY_GRANT_ADMIN);
             removePreference(KEY_APP_AND_CONTENT_ACCESS);
             removePreference(KEY_APP_COPYING);
+            removePreference(KEY_RUN_IN_BACKGROUND);
         } else {
             if (!Utils.isVoiceCapable(context)) { // no telephony
                 removePreference(KEY_ENABLE_TELEPHONY);
@@ -399,11 +409,14 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
                 if (!SHOW_APP_COPYING_PREF) {
                     removePreference(KEY_APP_COPYING);
                 }
+                removePreference(KEY_RUN_IN_BACKGROUND);
             } else {
                 mPhonePref.setChecked(!mUserManager.hasUserRestriction(
                         UserManager.DISALLOW_OUTGOING_CALLS, new UserHandle(userId)));
                 mRemoveUserPref.setTitle(R.string.user_remove_user);
                 removePreference(KEY_APP_COPYING);
+                mRunInBackgroundPref.setChecked(!userRestrictions.isSet(
+                        UserManager.DISALLOW_RUN_IN_BACKGROUND));
             }
 
             // Remove preference KEY_REMOVE_USER if DISALLOW_REMOVE_USER restriction is set
@@ -419,6 +432,7 @@ public class UserDetailsSettings extends SettingsPreferenceFragment
             mGrantAdminPref.setOnPreferenceChangeListener(this);
             mAppAndContentAccessPref.setOnPreferenceClickListener(this);
             mAppCopyingPref.setOnPreferenceClickListener(this);
+            mRunInBackgroundPref.setOnPreferenceChangeListener(this);
         }
     }
 
diff --git a/src/com/android/settings/users/UserRestrictions.java b/src/com/android/settings/users/UserRestrictions.java
new file mode 100644
index 00000000000..3daa2c453dc
--- /dev/null
+++ b/src/com/android/settings/users/UserRestrictions.java
@@ -0,0 +1,49 @@
+package com.android.settings.users;
+
+import android.content.pm.UserInfo;
+import android.os.Bundle;
+import android.os.UserHandle;
+import android.os.UserManager;
+
+import java.util.List;
+
+final class UserRestrictions {
+
+    final UserManager userManager;
+    final UserInfo userInfo;
+
+    UserRestrictions(UserManager userManager, UserInfo userInfo) {
+        this.userManager = userManager;
+        this.userInfo = userInfo;
+    }
+
+    boolean isSet(String restrictionKey) {
+        final boolean isSetFromUser = userManager.hasUserRestriction(restrictionKey, userInfo.getUserHandle());
+        if (userInfo.isGuest()) {
+            return isSetFromUser || userManager.getDefaultGuestRestrictions().getBoolean(restrictionKey);
+        }
+
+        return isSetFromUser;
+    }
+
+    void set(String restrictionKey, boolean enableRestriction) {
+        Bundle defaultGuestRestrictions = userManager.getDefaultGuestRestrictions();
+        if (userInfo.isGuest()) {
+            defaultGuestRestrictions.putBoolean(restrictionKey, enableRestriction);
+            userManager.setDefaultGuestRestrictions(defaultGuestRestrictions);
+
+            List<UserInfo> users = userManager.getAliveUsers();
+            for (UserInfo user : users) {
+                if (user.isGuest()) {
+                    UserHandle userHandle = userInfo.getUserHandle();
+                    for (String key : defaultGuestRestrictions.keySet()) {
+                        userManager.setUserRestriction(
+                                key, defaultGuestRestrictions.getBoolean(key), userHandle);
+                    }
+                }
+            }
+        } else {
+            userManager.setUserRestriction(restrictionKey, enableRestriction, userInfo.getUserHandle());
+        }
+    }
+}
-- 
2.43.2

